//Listing 2.1. ‘айл Point.h: определение класса Point 

#ifndef POINT_H
#define POINT_H 

class Point //заголовок описани€ класса Point  
{ //начало закрытой (по умолчанию) части класса 

private: //спецификатор закрытой части (секции) класса 

	float x_, y_; //члены-данные (свойства) класса (подчеркивание в 
	//конце Ц это современные рекомендации экспертов) 

public: //спецификатор открытой части - интерфейса класса 

	//** 1 **минимальный интерфейс класса 
	//объ€вленные ниже методы доступа (методы-аксессоры) 
	// Get...() и Set...() образуют минимальный интерфейс класса 

	int GetX();		//член-функци€ (метод) дл€ чтени€ компонента х_ 
	//{ //определение метода в классе не€вно объ€вл€ет его 
	//	return x_; // встроенным (inline) (лучше этого избегать) 
	//}

	int GetY(); //это прототип метода, а его определение находитс€  
	//здесь же, но после описани€ класса (так лучше) 
	void SetX(float); //метод дл€ установки значени€ компонента х_, 
	//определение его и всех остальных методов 
	void SetY(float); //размещаетс€ в файле реализации Point.cpp 
	void PrintPoint(int precision = 2); // функци€ выводит значение коортинат точки
};

//ќпределение встроенной функции должно быть видимым компил€тору в точке 
//ее вызова, по этой причине оно расположено в заголовочном файле. 
//»мена функций-членов, определ€емых вне контекста класса, должны быть 
//полностью квалифицированы (уточнены) при помощи бинарного оператора :: 

inline int Point::GetX() //здесь inline надо объ€вл€ть €вно 
{
	return x_;
}

inline int Point::GetY() //здесь inline надо объ€вл€ть €вно 
{
	return y_;
}

#endif 
