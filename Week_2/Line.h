//Listing 2.1. ‘айл Point.h: определение класса Point 

#ifndef LINE_H_BUB
#define LINE_H_BUB

#include "Line/point.h"

class Line           //заголовок описани€ класса Point  
{                     //начало закрытой (по умолчанию) части класса 

private:              //спецификатор закрытой части (секции) класса 

	Point s_, e_;     //члены-данные (свойства) класса (подчеркивание в 
					//конце Ц это современные рекомендации экспертов) 

public:               //спецификатор открытой части - интерфейса класса 

					  //** 1 **минимальный интерфейс класса 
					  //объ€вленные ниже методы доступа (методы-аксессоры) 
					  // Get...() и Set...() образуют минимальный интерфейс класса 

	Point GetS() const;           	

	Point GetE() const;        
						 
	void SetS(int, int);  
						 
	void SetE(int, int); 

						  //** 2 ** методы, расшир€ющие функциональность класса 

	//void Print();                               //печать координат точки 
	//											//в формате (x,y) 
	//bool Read(const char * = 0);                 //ввод с клавиатуры 
	//											 //(с подсказкой) 
	//void Move(int delta_x, int delta_y); //относительное перемещение 
	//									 //(от текущей позиции) 
	//double Dist(const Point &);                 //рассто€ние между точками 
												//(имеет один аргумент!) 

												//** 3 ** внешн€€ функци€, объ€вленна€ дружественной к классу 

	//friend double fdist(const Point &, const Point &);//рассто€ние 



};

//ќпределение встроенной функции должно быть видимым компил€тору в точке 
//ее вызова, по этой причине оно расположено в заголовочном файле. 
//»мена функций-членов, определ€емых вне контекста класса, должны быть 
//полностью квалифицированы (уточнены) при помощи бинарного оператора :: 

inline Point Line::GetS() const
{
	return s_;
}

inline Point Line::GetE() const          //здесь inline надо объ€вл€ть €вно 
{
	return e_;
}

#endif 

